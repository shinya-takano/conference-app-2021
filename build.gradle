import io.github.droidkaigi.feeder.Dep

buildscript {
    ext {
        nav_compose_version = "1.0.0-alpha08"
        kotlin_version = "1.4.31"
    }
    repositories {
        google()
        mavenCentral()
        jcenter()
        maven { url = "https://dl.bintray.com/kotlin/kotlin-eap" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.0-alpha09'
        classpath Dep.Kotlin.bom
        classpath Dep.Kotlin.plugin
        classpath Dep.Kotlin.stdlibJdk8
        classpath Dep.Kotlin.serializationPlugin
        classpath Dep.PlayServices.plugin
        classpath Dep.Dagger.plugin
        classpath Dep.FirebaseCrashlytics.plugin
        classpath 'app.cash.exhaustive:exhaustive-gradle:0.1.1'
        classpath Dep.SQLDelight.plugin
        classpath 'com.google.android.gms:oss-licenses-plugin:0.10.2'
    }
}

plugins {
    id 'com.diffplug.spotless' version '5.7.0'
}


allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://androidx.dev/snapshots/builds/6767375/artifacts/ui/repository' }
        maven { url = "https://dl.bintray.com/kotlin/kotlin-eap" }
        maven { url = uri("https://dl.bintray.com/korlibs/korlibs/") }
        maven { url "https://dl.bintray.com/kotlin/kotlinx" }
        maven { url "https://dl.bintray.com/kotlin/ktor" }
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
//        jcenter()
    }

    apply plugin: 'com.diffplug.spotless'
    spotless {
        ratchetFrom 'origin/main'
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')
            targetExclude("**/generated/**/*.kt")

            ktlint("0.39.0")
                    .userData([android: "true", experimental: "true"])
        }
    }
}

apply from: file('gradle/dependencyGraph.gradle')

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
